{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "kmsynapse1"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"SapTable1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapTable1'"
		},
		"kmlinkedserviceblob1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'kmlinkedserviceblob1'"
		},
		"kmsynapse1-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'kmsynapse1-WorkspaceDefaultSqlServer'"
		},
		"SapTable1_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "800"
		},
		"SapTable1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "DIGITAL6"
		},
		"SapTable1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "52.252.116.118"
		},
		"SapTable1_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"kmsynapse1-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://kmdlgen1.dfs.core.windows.net"
		},
		"filetrigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/e7eeffbb-a3a2-46ab-aaf5-b356c47bb033/resourceGroups/KMRG/providers/Microsoft.Storage/storageAccounts/kmstoracc1"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/copydirtydata')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_fla",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "km1cont1/input/DirtyData.csv"
							},
							{
								"name": "Destination",
								"value": "kmstr1/Kmoutput1/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Duration",
											"type": "String"
										},
										"sink": {
											"name": "Duration",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String"
										},
										"sink": {
											"name": "Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Pulse",
											"type": "String"
										},
										"sink": {
											"name": "Pulse",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Maxpulse",
											"type": "String"
										},
										"sink": {
											"name": "Maxpulse",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Calories",
											"type": "String"
										},
										"sink": {
											"name": "Calories",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_fla",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_fla",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_fla')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_fla')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copyglmaster')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copyglmaster",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "km1cont1/input/sapglmaster.csv"
							},
							{
								"name": "Destination",
								"value": "kmstr1/kminput1/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_al4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_al4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-15T16:00:48Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_al4')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_al4')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/foreachpipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "foreachpipeline",
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.foldername",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "copyoutput",
									"description": "copyoutput",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "kminputfile1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Demoforeach",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"foldername": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-03T15:52:03Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/kminputfile1')]",
				"[concat(variables('workspaceId'), '/datasets/Demoforeach')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeline1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "km1cont1/input/DirtyData.csv"
							},
							{
								"name": "Destination",
								"value": "km1cont2/output/kmouput.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Duration",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time Period",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Pulse",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pulse Rate",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Maxpulse",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Maxpulse",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Calories",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Calories Consumed",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "kminputfile1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "kmoutput2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"inputfilename": {
						"type": "String"
					},
					"outputfilename": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-08T06:35:28Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/kminputfile1')]",
				"[concat(variables('workspaceId'), '/datasets/kmoutput2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeline2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "pipeline2",
				"activities": [
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "filesdeleted",
								"value": "files with km prefix deleted"
							}
						],
						"typeProperties": {
							"dataset": {
								"referenceName": "kmoutput2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "kmlinkedserviceblob1",
									"type": "LinkedServiceReference"
								},
								"path": "km1cont2"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.csv",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-08T06:35:28Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/kmoutput2')]",
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/restapipipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "restapipipeline",
				"activities": [
					{
						"name": "pulldata",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://dummy.restapiexample.com/api/v1/employees",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "pushdatatoblob",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "pulldata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kmstoracc1.blob.core.windows.net/kmrest/employee.json?sp=racw&st=2022-05-03T19:05:26Z&se=2022-07-31T03:05:26Z&spr=https&sv=2020-08-04&sr=c&sig=annfuotQ23TgUuGZhYyPVzHJ7zFgXsoGgHA5mp%2Fbb5I%3D",
							"method": "PUT",
							"headers": {
								"x-ms-blob-type": "BlockBlob"
							},
							"body": {
								"value": "@activity('pulldata').output",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-03T19:09:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sapglmaster')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "sapglmaster",
				"activities": [
					{
						"name": "copyska1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SapTableResource2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "kmoutput2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copyskat",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "copyska1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SapTableResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "kmoutputfile2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-08T06:35:28Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SapTableResource2')]",
				"[concat(variables('workspaceId'), '/datasets/kmoutput2')]",
				"[concat(variables('workspaceId'), '/datasets/SapTableResource1')]",
				"[concat(variables('workspaceId'), '/datasets/kmoutputfile2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sapglmasterpipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "sapska1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MANDT",
											"type": "String"
										},
										"sink": {
											"path": "$['MANDT']"
										}
									},
									{
										"source": {
											"name": "KTOPL",
											"type": "String"
										},
										"sink": {
											"path": "$['KTOPL']"
										}
									},
									{
										"source": {
											"name": "SAKNR",
											"type": "String"
										},
										"sink": {
											"path": "$['SAKNR']"
										}
									},
									{
										"source": {
											"name": "XBILK",
											"type": "String"
										},
										"sink": {
											"path": "$['XBILK']"
										}
									},
									{
										"source": {
											"name": "SAKAN",
											"type": "String"
										},
										"sink": {
											"path": "$['SAKAN']"
										}
									},
									{
										"source": {
											"name": "BILKT",
											"type": "String"
										},
										"sink": {
											"path": "$['BILKT']"
										}
									},
									{
										"source": {
											"name": "ERDAT",
											"type": "String"
										},
										"sink": {
											"path": "$['ERDAT']"
										}
									},
									{
										"source": {
											"name": "ERNAM",
											"type": "String"
										},
										"sink": {
											"path": "$['ERNAM']"
										}
									},
									{
										"source": {
											"name": "GVTYP",
											"type": "String"
										},
										"sink": {
											"path": "$['GVTYP']"
										}
									},
									{
										"source": {
											"name": "KTOKS",
											"type": "String"
										},
										"sink": {
											"path": "$['KTOKS']"
										}
									},
									{
										"source": {
											"name": "MUSTR",
											"type": "String"
										},
										"sink": {
											"path": "$['MUSTR']"
										}
									},
									{
										"source": {
											"name": "VBUND",
											"type": "String"
										},
										"sink": {
											"path": "$['VBUND']"
										}
									},
									{
										"source": {
											"name": "XLOEV",
											"type": "String"
										},
										"sink": {
											"path": "$['XLOEV']"
										}
									},
									{
										"source": {
											"name": "XSPEA",
											"type": "String"
										},
										"sink": {
											"path": "$['XSPEA']"
										}
									},
									{
										"source": {
											"name": "XSPEB",
											"type": "String"
										},
										"sink": {
											"path": "$['XSPEB']"
										}
									},
									{
										"source": {
											"name": "XSPEP",
											"type": "String"
										},
										"sink": {
											"path": "$['XSPEP']"
										}
									},
									{
										"source": {
											"name": "MCOD1",
											"type": "String"
										},
										"sink": {
											"path": "$['MCOD1']"
										}
									},
									{
										"source": {
											"name": "FUNC_AREA",
											"type": "String"
										},
										"sink": {
											"path": "$['FUNC_AREA']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SapTableResource3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sapska1json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sapskat",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SapTableResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sapskatjson",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ska1jsontoparquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sapska1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['MANDT']"
										},
										"sink": {
											"name": "MANDT"
										}
									},
									{
										"source": {
											"path": "$['KTOPL']"
										},
										"sink": {
											"name": "KTOPL"
										}
									},
									{
										"source": {
											"path": "$['SAKNR']"
										},
										"sink": {
											"name": "SAKNR"
										}
									},
									{
										"source": {
											"path": "$['XBILK']"
										},
										"sink": {
											"name": "XBILK"
										}
									},
									{
										"source": {
											"path": "$['SAKAN']"
										},
										"sink": {
											"name": "SAKAN"
										}
									},
									{
										"source": {
											"path": "$['BILKT']"
										},
										"sink": {
											"name": "BILKT"
										}
									},
									{
										"source": {
											"path": "$['ERDAT']"
										},
										"sink": {
											"name": "ERDAT"
										}
									},
									{
										"source": {
											"path": "$['ERNAM']"
										},
										"sink": {
											"name": "ERNAM"
										}
									},
									{
										"source": {
											"path": "$['GVTYP']"
										},
										"sink": {
											"name": "GVTYP"
										}
									},
									{
										"source": {
											"path": "$['KTOKS']"
										},
										"sink": {
											"name": "KTOKS"
										}
									},
									{
										"source": {
											"path": "$['MUSTR']"
										},
										"sink": {
											"name": "MUSTR"
										}
									},
									{
										"source": {
											"path": "$['VBUND']"
										},
										"sink": {
											"name": "VBUND"
										}
									},
									{
										"source": {
											"path": "$['XLOEV']"
										},
										"sink": {
											"name": "XLOEV"
										}
									},
									{
										"source": {
											"path": "$['XSPEA']"
										},
										"sink": {
											"name": "XSPEA"
										}
									},
									{
										"source": {
											"path": "$['XSPEB']"
										},
										"sink": {
											"name": "XSPEB"
										}
									},
									{
										"source": {
											"path": "$['XSPEP']"
										},
										"sink": {
											"name": "XSPEP"
										}
									},
									{
										"source": {
											"path": "$['MCOD1']"
										},
										"sink": {
											"name": "MCOD1"
										}
									},
									{
										"source": {
											"path": "$['FUNC_AREA']"
										},
										"sink": {
											"name": "FUNC_AREA"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "sapska1json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sapska1parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "skatjsontoparquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sapskat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['MANDT']"
										},
										"sink": {
											"name": "MANDT"
										}
									},
									{
										"source": {
											"path": "$['SPRAS']"
										},
										"sink": {
											"name": "SPRAS"
										}
									},
									{
										"source": {
											"path": "$['KTOPL']"
										},
										"sink": {
											"name": "KTOPL"
										}
									},
									{
										"source": {
											"path": "$['SAKNR']"
										},
										"sink": {
											"name": "SAKNR"
										}
									},
									{
										"source": {
											"path": "$['TXT20']"
										},
										"sink": {
											"name": "TXT20"
										}
									},
									{
										"source": {
											"path": "$['TXT50']"
										},
										"sink": {
											"name": "TXT50"
										}
									},
									{
										"source": {
											"path": "$['MCOD1']"
										},
										"sink": {
											"name": "MCOD1"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "sapskatjson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sapskatparquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SapTableResource3')]",
				"[concat(variables('workspaceId'), '/datasets/sapska1json')]",
				"[concat(variables('workspaceId'), '/datasets/SapTableResource1')]",
				"[concat(variables('workspaceId'), '/datasets/sapskatjson')]",
				"[concat(variables('workspaceId'), '/datasets/sapska1parquet')]",
				"[concat(variables('workspaceId'), '/datasets/sapskatparquet1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Billingdocumentjson')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BillingDocumentFullDataSet.json",
						"folderPath": "output2",
						"container": "km1cont2"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "hourlysales.csv",
						"folderPath": "input",
						"container": "km1cont1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "km1cont2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Demoforeach')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Demoforeach",
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"container": "km1cont2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_al4')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmsynapse1-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ska1",
						"folderPath": "kminput1",
						"fileSystem": "kmstr1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmsynapse1-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_fla')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmsynapse1-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Kmoutput1",
						"fileSystem": "kmstr1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmsynapse1-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SapTableResource1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapTable1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "SKAT"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SapTable1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SapTableResource2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapTable1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "SKA1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SapTable1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SapTableResource3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapTable1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "SKA1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SapTable1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_al4')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ska1.csv",
						"folderPath": "output2",
						"container": "km1cont2"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_fla')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DirtyData.csv",
						"folderPath": "input",
						"container": "km1cont1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Duration",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Pulse",
						"type": "String"
					},
					{
						"name": "Maxpulse",
						"type": "String"
					},
					{
						"name": "Calories",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kminputfile1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DirtyData.csv",
						"folderPath": "input",
						"container": "km1cont1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Duration",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Pulse",
						"type": "String"
					},
					{
						"name": "Maxpulse",
						"type": "String"
					},
					{
						"name": "Calories",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kmoutput2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ska1.csv",
						"folderPath": "output2",
						"container": "km1cont2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "MANDT",
						"type": "String"
					},
					{
						"name": "KTOPL",
						"type": "String"
					},
					{
						"name": "SAKNR",
						"type": "String"
					},
					{
						"name": "XBILK",
						"type": "String"
					},
					{
						"name": "SAKAN",
						"type": "String"
					},
					{
						"name": "BILKT",
						"type": "String"
					},
					{
						"name": "ERDAT",
						"type": "String"
					},
					{
						"name": "ERNAM",
						"type": "String"
					},
					{
						"name": "GVTYP",
						"type": "String"
					},
					{
						"name": "KTOKS",
						"type": "String"
					},
					{
						"name": "MUSTR",
						"type": "String"
					},
					{
						"name": "VBUND",
						"type": "String"
					},
					{
						"name": "XLOEV",
						"type": "String"
					},
					{
						"name": "XSPEA",
						"type": "String"
					},
					{
						"name": "XSPEB",
						"type": "String"
					},
					{
						"name": "XSPEP",
						"type": "String"
					},
					{
						"name": "MCOD1",
						"type": "String"
					},
					{
						"name": "FUNC_AREA",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kmoutputfile2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "skat",
						"folderPath": "output",
						"container": "km1cont2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sapglmaster')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sapglmaster",
						"folderPath": "input",
						"container": "km1cont1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sapska1json')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sapska1json",
						"folderPath": "input",
						"container": "km1cont1"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sapska1parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sapska1parquet",
						"folderPath": "output",
						"container": "km1cont2"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sapskatjson')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sapskatjson",
						"folderPath": "input",
						"container": "km1cont1"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sapskatparquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kmlinkedserviceblob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sapskatparquet",
						"folderPath": "output",
						"container": "km1cont2"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kmlinkedserviceblob1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SapTable1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "saptablelinkage",
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SapTable1_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('SapTable1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapTable1_password')]"
					},
					"server": "[parameters('SapTable1_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapTable1_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kmlinkedserviceblob1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('kmlinkedserviceblob1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kmsynapse1-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('kmsynapse1-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kmsynapse1-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('kmsynapse1-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/filetrigger1')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/km1cont1/blobs/input/hourlysales",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('filetrigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/integrationRuntime1')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"description": "selfhosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dataflow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "kmoutput2",
								"type": "DatasetReference"
							},
							"name": "SKA1"
						},
						{
							"dataset": {
								"referenceName": "kmoutputfile2",
								"type": "DatasetReference"
							},
							"name": "SKAT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sapglmaster",
								"type": "DatasetReference"
							},
							"name": "glmaster"
						}
					],
					"transformations": [
						{
							"name": "SKA1JOINSKAT"
						},
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          MANDT as string,",
						"          KTOPL as string,",
						"          SAKNR as string,",
						"          XBILK as string,",
						"          SAKAN as string,",
						"          BILKT as string,",
						"          ERDAT as string,",
						"          ERNAM as string,",
						"          GVTYP as string,",
						"          KTOKS as string,",
						"          MUSTR as string,",
						"          VBUND as string,",
						"          XLOEV as string,",
						"          XSPEA as string,",
						"          XSPEB as string,",
						"          XSPEP as string,",
						"          MCOD1 as string,",
						"          FUNC_AREA as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> SKA1",
						"source(output(",
						"          MANDT as short,",
						"          SPRAS as boolean,",
						"          KTOPL as string,",
						"          SAKNR as string,",
						"          TXT20 as string,",
						"          TXT50 as string,",
						"          MCOD1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> SKAT",
						"SKA1, SKAT join(SKA1@SAKNR == SKAT@SAKNR,",
						"     joinType:'inner',",
						"     broadcast: 'auto')~> SKA1JOINSKAT",
						"SKA1JOINSKAT select(mapColumn(",
						"          MANDT = SKA1@MANDT,",
						"          KTOPL = SKA1@KTOPL,",
						"          SAKNR = SKA1@SAKNR,",
						"          XBILK,",
						"          SAKAN,",
						"          BILKT,",
						"          ERDAT,",
						"          ERNAM,",
						"          GVTYP,",
						"          KTOKS,",
						"          MCOD1 = SKA1@MCOD1,",
						"          SPRAS,",
						"          TXT50,",
						"          MCOD1 = SKAT@MCOD1",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(equals(KTOPL,'ACIA')) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string",
						"     ),",
						"     partitionFileNames:['sapglmaster.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> glmaster"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/kmoutput2')]",
				"[concat(variables('workspaceId'), '/datasets/kmoutputfile2')]",
				"[concat(variables('workspaceId'), '/datasets/sapglmaster')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "km1",
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseDelimitedTextFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseDelimitedTextFormat] \n\tWITH ( FORMAT_TYPE = DELIMITEDTEXT ,\n\t       FORMAT_OPTIONS (\n\t\t\t FIELD_TERMINATOR = ',',\n\t\t\t USE_TYPE_DEFAULT = FALSE\n\t\t\t))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'kmstr1_kmdlgen1_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [kmstr1_kmdlgen1_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://kmstr1@kmdlgen1.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE dirtydata (\n\t[C1] nvarchar(4000),\n\t[C2] nvarchar(4000),\n\t[C3] nvarchar(4000),\n\t[C4] nvarchar(4000),\n\t[C5] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'Kmoutput1/DirtyData.txt',\n\tDATA_SOURCE = [kmstr1_kmdlgen1_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseDelimitedTextFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM KM1.dirtydata\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "KMDB",
						"poolName": "Built-in"
					},
					"resultLimit": -1
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}